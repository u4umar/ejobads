<?php

/**
 * @file
 * Contains install and update functions for testing Project Browser.
 */

use Drupal\Component\Serialization\Json;
use Drupal\Core\Database\Database;

/**
 * Replace Project Browser data with test data.
 */
function project_browser_test_install() {
  $connection = Database::getConnection();
  $connection->truncate('project_browser_projects')->execute();
  $connection->truncate('project_browser_categories')->execute();

  $module_path = \Drupal::service('module_handler')->getModule('project_browser')->getPath();

  $category_values = [];
  $projects = Json::decode(file_get_contents($module_path . '/tests/fixtures/projects_fixture.json'));
  // Insert fixture data to the database.
  $query = $connection->insert('project_browser_projects')->fields([
    'nid',
    'title',
    'author',
    'created',
    'changed',
    'project_usage_total',
    'maintenance_status',
    'development_status',
    'status',
    'field_security_advisory_coverage',
    'flag_project_star_user_count',
    'field_project_type',
    'project_data',
    'field_project_machine_name',
  ]);
  foreach ($projects as $project) {
    $project_data = $project['project_data'];

    $project['maintenance_status'] = $project_data['taxonomy_vocabulary_44']['id'];
    $project['development_status'] = $project_data['taxonomy_vocabulary_46']['id'];
    $project['field_project_machine_name'] = $project_data['field_project_machine_name'];

    // Author name is expected to be in a nested array.
    $project_data['author']['name'] = $project['author'];

    // Gather the module categories.
    if (!empty($project_data['taxonomy_vocabulary_3'])) {
      foreach ($project_data['taxonomy_vocabulary_3'] as $category) {
        $category_values[$category['id'] . '.' . $project['nid']] = [
          'tid' => $category['id'],
          'pid' => $project['nid'],
        ];
      }
    }
    // Compute total project usage.
    $project_usage_total = 0;
    foreach ($project_data['project_usage'] as $usage) {
      $project_usage_total += $usage;
    }
    $project['project_usage_total'] = $project_usage_total;
    // Serialize all the project data.
    unset($project['project_data']);
    $project['project_data'] = serialize($project_data + $project);
    $query->values($project);
  }
  $query->execute();

  $category_query = $connection->insert('project_browser_categories')->fields([
    'tid',
    'pid',
  ]);
  foreach ($category_values as $category) {
    $category_query->values($category);
  }
  $category_query->execute();
}
